generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  cpf       String   @id @unique
  name      String
  email     String   @unique
  password  String
  phone     String
  client    Client?
  admin     Admin?
  roles      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  user      User           @relation(fields: [userId], references: [cpf])
  userId    String         @id @unique
  address   Address        @relation(fields: [addressId], references: [id], name: "ClientAddress")
  addressId Int
  orders    Order[]        @relation("OrderClient")
  cart      ShoppingCart[] @relation("CartClient")
}

model Address {
  id         Int      @id @default(autoincrement())
  cep        String
  street     String
  city       String
  state      String
  num        String
  complement String
  clients    Client[] @relation("ClientAddress")
  orders     Order[]  @relation("OrderAddress")
}

model Admin {
  user    User      @relation(fields: [userId], references: [cpf])
  userId  String    @id @unique
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  products    Product[]
  orderItems  OrderItem[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String
  stock       Int
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int        @default(0)
  cart        CartItem?
}

model OrderItem {
  id                  Int    @id @default(autoincrement())
  order               Order  @relation(fields: [orderId], references: [id])
  orderId             Int
  product_quantity    Int
  product_name        String
  product_price       Float
  product_image       String
  product_description String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int     @default(0)
}

model Order {
  id        Int         @id @default(autoincrement())
  client    Client      @relation(fields: [clientId], references: [userId], name: "OrderClient")
  clientId  String
  product   OrderItem[]
  total     Float
  createdAt DateTime    @default(now())
  status    String
  address   Address     @relation(fields: [addressId], references: [id], name: "OrderAddress")
  addressId Int
}

model CartItem {
  id             Int          @id @default(autoincrement())
  product        Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId      Int          @unique
  shoppingCart   ShoppingCart @relation(fields: [shoppingCartId], references: [id])
  shoppingCartId Int
  quantity       Int
}

model ShoppingCart {
  id       Int        @id @default(autoincrement())
  client   Client     @relation(fields: [clientId], references: [userId], name: "CartClient")
  clientId String
  product  CartItem[]
}
